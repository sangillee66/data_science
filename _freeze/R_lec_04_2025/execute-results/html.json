{
  "hash": "a685448caf6629dadb40e98498994d76",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: |\n  | [R Lecture 4]{style=\"color:coral;font-size:0.6em\"}   \n  | [데이터 불러오기와 정돈하기]{style=\"font-size:1em\"} \nauthor: <br> 이상일(서울대학교 지리교육과 교수)\ndate: 2025-9-30\nformat: \n  revealjs:\n    logo: snu_edu_1.png\n    footer: https://sangillee.snu.ac.kr/\n    transition: fade\n    transition-speed: fast\n    margin: 0.05\n    center: false\n    # smaller: false\n    # scrollable: false\n    code-link: true\n    code-line-numbers: false\n    code-copy: true\n    code-overflow: scroll\n    slide-number: true\n    width: 960 * 1.5\n    height: 700 * 1.5\n    lightbox: false\n    # min-scale: 1\n    # max-scale: 1\n    pointer:\n      pointerSize: 20\n      color: red\n    menu: true\n    embed-resources: false\n    theme: [default, custom_hq_pretendard_step.scss] # 슬라이드 본문 폰트 크기 조정\n    revealjs-plugins:\n      - pointer\n    css: styles.css\nexecute: \n  warning: false\n  error: false\n  freeze: auto  \ndpi: 600\neditor: visual\nwebr: \n  show-startup-message: false     \n  packages: []\nfilters:\n  - webr\n# suppress-bibliography: true\neditor_options: \n  chunk_output_type: console\n---\n\n## 데이터사이언스 프로세스\n\n![[https://r4ds.hadley.nz/import.html](https://r4ds.hadley.nz/import.html){style=\"font-size:1.25rem\"}](images/data_science_process_import-02.png)\n\n-   티블(tibble): 타이디버스의 데이터 프레임 형식\n\n-   데이터 불러오기(importing): 데이터를 '가져와' R 객체로 만들기\n\n-   데이터 정돈하기(tidying): 불러온 데이터를 '정돈된(tidy)' 데이터로 만들기\n\n# [티블 Tibble]{style=\"color:coral\"}\n\n## **tibble** 패키지\n\n![[https://tibble.tidyverse.org/](https://tibble.tidyverse.org/){style=\"font-size:1.25rem\"}](images/clipboard-3459494907.png){fig-align=\"center\"}\n\n## tibble vs. data.frame\n\n::: panel-tabset\n## 데이터 프레임\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\na <- c(TRUE, FALSE, TRUE, FALSE)\nb <- c(58L, 26L, 28L, 22L)\nc <- c(3.19, 2.09, 2.11, 2.03)\nd <- c(\"이상일\", \"김우형\", \"이하은\", \"박서우\")\ne <- c(\"남자\", \"남자\", \"여자\", \"여자\")\ndf_1 <- data.frame(a, b, c, d, e)\ndf_2 <- tibble(a, b, c, d, e)\n```\n:::\n\n\n## data.frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      a  b    c      d    e\n1  TRUE 58 3.19 이상일 남자\n2 FALSE 26 2.09 김우형 남자\n3  TRUE 28 2.11 이하은 여자\n4 FALSE 22 2.03 박서우 여자\n```\n\n\n:::\n:::\n\n\n## tibble 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  a         b     c d      e    \n  <lgl> <int> <dbl> <chr>  <chr>\n1 TRUE     58  3.19 이상일 남자 \n2 FALSE    26  2.09 김우형 남자 \n3 TRUE     28  2.11 이하은 여자 \n4 FALSE    22  2.03 박서우 여자 \n```\n\n\n:::\n:::\n\n\n## tibble 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_2 |> mutate(\n  e = fct(e, levels = c(\"남자\", \"여자\"))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  a         b     c d      e    \n  <lgl> <int> <dbl> <chr>  <fct>\n1 TRUE     58  3.19 이상일 남자 \n2 FALSE    26  2.09 김우형 남자 \n3 TRUE     28  2.11 이하은 여자 \n4 FALSE    22  2.03 박서우 여자 \n```\n\n\n:::\n:::\n\n:::\n\n## 데이터 뷰어 Data viewer\n\n-   데이터 프레임(티블) 객체를 엑셀과 유사한 형태로 디스플레이\n\n-   작동 방법\n\n    -   `View(티블명)` 함수\n\n    -   환경창의 아이콘 클릭\n\n-   기능\n\n    -   소팅(sorting): 분류하기\n\n    -   스크롤링(scrolling): 상하이동\n\n    -   필터링(filtering): 골라내기\n\n    -   서칭(searching): 검색하기\n\n## 데이터 뷰어 Data viewer\n\n![](images/clipboard-3652581161.png)\n\n## 데이터 뷰어 Data viewer\n\n![](images/clipboard-2907343879.png)\n\n# [데이터 불러오기]{style=\"color:coral\"}\n\n## **readr** 패키지\n\n![[https://readr.tidyverse.org/](https://readr.tidyverse.org/){style=\"font-size:1.25rem\"}](images/clipboard-1251213286.png){fig-align=\"center\"}\n\n## **readr** 패키지: 주요 불러오기 함수\n\n| 함수명         | 포맷                                       |\n|----------------|--------------------------------------------|\n| `read_csv()`   | 콤마분리(comma-separated values, CSV) 형식 |\n| `read_csv2()`  | 세미콜론분리(semicolon-separated) 형식     |\n| `read_tsv()`   | 탭구분(tab-limited) 형식                   |\n| `read_delim()` | 여타의 구분 형식                           |\n| `read_fwf()`   | 고정폭(fixed-width) 형식                   |\n| `read_table()` | 공백구분 형식                              |\n| `read_log()`   | 아파치 형식(Apache-style)의 로그 파일      |\n\n## **readr** 패키지: 주요 파싱(parsing) 함수\n\n| 컬럼 유형    | 새로운 벡터       | 기존 벡터           |\n|--------------|-------------------|---------------------|\n| 논리형 `lgl` | `col_logical()`   | `parse_logical()`   |\n| 정수형 `int` | `col_integer()`   | `parse_integer()`   |\n| 실수형 `dbl` | `col_double()`    | `parse_double()`    |\n| 문자형 `chr` | `col_character()` | `parse_character()` |\n| 범주형 `fct` | `col_factor()`    | `parse_factor()`    |\n\n## `read_csv()` 함수의 활용\n\n::: panel-tabset\n## 불러오기 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nread_csv(\"https://pos.it/r4ds-students-csv\")\n```\n:::\n\n\n## 결과 1\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         <dbl> <chr>            <chr>              <chr>               <chr>\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          <NA> \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n```\n\n\n:::\n:::\n\n\n## 불러오기 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nread_csv(\n  file = \"https://pos.it/r4ds-students-csv\", \n  skip = 1, \n  col_names = c(\"student_id\", \"full_name\", \"favorite_food\", \"meal_plan\", \"age\"),\n  col_types = cols(\n    meal_plan = col_factor(),\n    age = col_number()\n  ),\n  na = c(\"N/A\")\n  )\n```\n:::\n\n\n## 결과 2\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  student_id full_name        favorite_food      meal_plan             age\n       <dbl> <chr>            <chr>              <fct>               <dbl>\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    <NA>               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch    NA\n6          6 Güvenç Attila    Ice cream          Lunch only              6\n```\n\n\n:::\n:::\n\n:::\n\n## 관련 패키지\n\n::: {layout=\"[30,30, 30]\" layout-valign=\"center\"}\n![[https://readxl.tidyverse.org/](https://readxl.tidyverse.org/){style=\"font-size:1.25rem\"}](images/clipboard-2419843589.png)\n\n![[https://ycphs.github.io/openxlsx/](https://ycphs.github.io/openxlsx/){style=\"font-size:1.25rem\"}](images/clipboard-2386206028.png)\n\n![[https://googlesheets4.tidyverse.org/](https://googlesheets4.tidyverse.org/){style=\"font-size:1.25rem\"}](images/clipboard-812069546.png)\n:::\n\n## **readxl** 패키지\n\n-   `read_xls(), read_xlsx(), read_excel()`\n\n    -   `path`: 파일 경로와 파일명\n\n    -   `sheet`: 특정 시트의 선택\n\n    -   `range`: 특정 범위의 셀 선택\n\n    -   `skip`: 불러들이지 않을 최소 행 번호\n\n    -   `col_names`: 컬럼 이름 지정\n\n    -   `col_types`: 컬럼 데이터 유형 지정(\"skip\", \"guess\", \"text\", \"logical\", \"numeric\", etc.)\n\n    -   `na`: 결측치 규정\n\n## 데이터 불러오는 다른 방법\n\n![](images/clipboard-3854717875.png)\n\n# [데이터 정돈하기]{style=\"color:coral\"}\n\n## **tidyr** 패키지\n\n![[https://tidyr.tidyverse.org/](https://tidyr.tidyverse.org/){style=\"font-size:1.25rem\"}](images/clipboard-1046439731.png){fig-align=\"center\"}\n\n## '정돈된 데이터'의 정의\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:1.25rem\"}](images/clipboard-4067066416.png)\n\n## '정돈된 데이터'의 정의\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:1.25rem\"}](images/clipboard-3412852372.png)\n\n## '정돈된 데이터'의 정의\n\n-   개별 변수(variable)는 열(column) 하나를 차지한다. 즉, 개별 열에는 하나의 변수가 위치한다.\n\n-   개별 관측개체(observation)는 하나의 행(row)을 차지한다. 즉, 개별 행에는 하나의 관측개체가 위치한다.\n\n-   개별 값(value)은 하나의 셀(cell)을 차지한다. 즉, 개별 셀에는 하나의 값이 위치한다.\n\n## '정돈된 데이터'의 예시\n\n::: panel-tabset\n## table1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ntable1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n\n\n:::\n:::\n\n\n## table4a\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable4a\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  country     `1999` `2000`\n  <chr>        <dbl>  <dbl>\n1 Afghanistan    745   2666\n2 Brazil       37737  80488\n3 China       212258 213766\n```\n\n\n:::\n:::\n\n\n## table2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   country      year type            count\n   <chr>       <dbl> <chr>           <dbl>\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n```\n\n\n:::\n:::\n\n\n## table3\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  country      year rate             \n  <chr>       <dbl> <chr>            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n```\n\n\n:::\n:::\n\n:::\n\n## '정돈된 데이터'의 이점\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:1.25rem\"}](images/clipboard-3106963859.png)\n\n## '정돈된 데이터'의 이점\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:1.25rem\"}](images/clipboard-3609380673.png)\n\n## '정돈된 데이터'의 이점\n\n![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style=\"font-size:1.25rem\"}](images/clipboard-1736663833.png)\n\n## 데이터 정돈하기의 핵심 기능\n\n-   데이터 구조 변형\n\n    -   핵심 기능으로 데이터 늘이기와 데이터 넓히기가 포함\n\n-   컬럼의 결합 및 분할\n\n    -   두 개 이상의 컬럼을 하나의 컬럼으로 결합하거나 한 컬럼을 두 개 이상의 컬럼으로 분할\n\n-   결측치 처리\n\n    -   결측치가 포함된 행을 다양한 방식으로 처리\n\n## 데이터 구조 변형\n\n![[https://www.r-bloggers.com/2024/09/mastering-data-transformation-in-r-with-pivot_longer-and-pivot_wider/](https://www.r-bloggers.com/2024/09/mastering-data-transformation-in-r-with-pivot_longer-and-pivot_wider/){style=\"font-size:1.25rem\"}](images/clipboard-1179593338.png){fig-align=\"center\"}\n\n## 와이드 폼(wide form) vs. 롱 폼(long form)\n\n![](images/clipboard-2491549849.png){fig-align=\"center\"}\n\n## 데이터 늘이기: `pivot_longer()`\n\n::: panel-tabset\n## table4a\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable4a\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  country     `1999` `2000`\n  <chr>        <dbl>  <dbl>\n1 Afghanistan    745   2666\n2 Brazil       37737  80488\n3 China       212258 213766\n```\n\n\n:::\n:::\n\n\n## 정돈 결과\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable4a |> \n  pivot_longer(\n    cols = c(`1999`, `2000`),\n    names_to = \"year\", \n    values_to = \"cases\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  country     year   cases\n  <chr>       <chr>  <dbl>\n1 Afghanistan 1999     745\n2 Afghanistan 2000    2666\n3 Brazil      1999   37737\n4 Brazil      2000   80488\n5 China       1999  212258\n6 China       2000  213766\n```\n\n\n:::\n:::\n\n:::\n\n## 데이터 늘이기: `pivot_longer()`\n\n![](images/clipboard-2601245679.png)\n\n## 데이터 넓히기: `pivot_wider()`\n\n::: panel-tabset\n## table2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   country      year type            count\n   <chr>       <dbl> <chr>           <dbl>\n 1 Afghanistan  1999 cases             745\n 2 Afghanistan  1999 population   19987071\n 3 Afghanistan  2000 cases            2666\n 4 Afghanistan  2000 population   20595360\n 5 Brazil       1999 cases           37737\n 6 Brazil       1999 population  172006362\n 7 Brazil       2000 cases           80488\n 8 Brazil       2000 population  174504898\n 9 China        1999 cases          212258\n10 China        1999 population 1272915272\n11 China        2000 cases          213766\n12 China        2000 population 1280428583\n```\n\n\n:::\n:::\n\n\n## 정돈 결과\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable2 |> \n  pivot_wider(\n    id_cols = c(country, year),\n    names_from = type, \n    values_from = count\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  country      year  cases population\n  <chr>       <dbl>  <dbl>      <dbl>\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n\n\n:::\n:::\n\n:::\n\n## 데이터 넓히기: `pivot_wider()`\n\n![](images/clipboard-3400622461.png)\n\n## 컬럼의 결합 및 분할\n\n::: panel-tabset\n## table3\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  country      year rate             \n  <chr>       <dbl> <chr>            \n1 Afghanistan  1999 745/19987071     \n2 Afghanistan  2000 2666/20595360    \n3 Brazil       1999 37737/172006362  \n4 Brazil       2000 80488/174504898  \n5 China        1999 212258/1272915272\n6 China        2000 213766/1280428583\n```\n\n\n:::\n:::\n\n\n## 정돈 결과\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable3 |> separate_wider_delim(\n  rate, delim = \"/\", names = c(\"cases\", \"population\") \n) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  country      year cases  population\n  <chr>       <dbl> <chr>  <chr>     \n1 Afghanistan  1999 745    19987071  \n2 Afghanistan  2000 2666   20595360  \n3 Brazil       1999 37737  172006362 \n4 Brazil       2000 80488  174504898 \n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n```\n\n\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}