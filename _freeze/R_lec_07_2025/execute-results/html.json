{
  "hash": "183bcd785d70989ffc774d187cc7b655",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: |\n  | [R Lecture 7]{style=\"color:coral;font-size:0.6em\"}   \n  | [데이터 탐색하기]{style=\"font-size:1em\"} \nauthor: <br> 이상일(서울대학교 지리교육과 교수)\ndate: 2025-10-28\nformat: \n  revealjs:\n    logo: snu_edu_1.png\n    footer: https://sangillee.snu.ac.kr/\n    transition: fade\n    transition-speed: fast\n    margin: 0.05\n    center: false\n    # smaller: false\n    # scrollable: false\n    code-link: true\n    code-line-numbers: false\n    code-copy: true\n    code-overflow: scroll\n    slide-number: true\n    width: 960 * 1.5\n    height: 700 * 1.5\n    lightbox: false\n    # min-scale: 1\n    # max-scale: 1\n    pointer:\n      pointerSize: 20\n      color: red\n    menu: true\n    embed-resources: false\n    theme: [default, custom_hq_pretendard_step.scss] # 슬라이드 본문 폰트 크기 조정\n    revealjs-plugins:\n      - pointer\n    css: styles.css\nexecute: \n  warning: false\n  error: false\n  freeze: auto  \ndpi: 600\neditor: visual\nwebr: \n  show-startup-message: false     \n  packages: []\nfilters:\n  - webr\n# suppress-bibliography: true\neditor_options: \n  chunk_output_type: console\n---\n\n# [기본 개념]{style=\"color:coral\"}\n\n## 데이터사이언스 프로세스\n\n![[https://r4ds.hadley.nz/whole-game.html](https://r4ds.hadley.nz/whole-game.html){style=\"font-size:1.25rem\"}](images/clipboard-101317234.png)\n\n## **탐색적 데이터 분석: 개념**\n\n-   탐색적 데이터 분석은 데이터와의 끝임없는 상호작용을 통해 의미있는 결과물을 얻어내는 과정을 의미한다. 데이터사이언스가 데이터로부터 이해, 지식, 통찰력을 획득하는 과정이라고 했을 때, 탐색적 데이터 분석은 [**데이터사이언스의 심장**]{style=\"color:coral\"}이라 해도 과언이 아니다. 상호작용은 데이터와의 질의응답의 연쇄과정을 의미한다. 의미있는 질문에 답을 얻기 위해서는 거의 반드시 데이터를 변형하거나 시각화해야만 한다.\n-   데이터 변형과 데이터 시각화는 개별적으로 탐색적 데이터 분석에 기여한다. [**데이터 변형**]{style=\"color:coral\"}은 데이터를 다른 각도로 바라볼 수 있게 해주고 다양한 요약 통계값을 산출해 준다. [**데이터 시각화**]{style=\"color:coral\"}는 데이터에 차원을 부가함으로써 시각화 되지 않았다면 발견할 수 없었던 것을 발견할 수 있게 해준다.\n\n## **탐색적 데이터 분석: 개념**\n\n-   [**데이터 변형에서 데이터 시각화로 이어지는 시퀀스**]{style=\"color:coral\"}가 탐색적 데이터 분석의 핵심적인 방법론이다. 데이터 변형의 궁극적인 목적은 바로 데이터 시각화를 위한 준비이다. 특정한 형태의 시각화를 위해서는 특정한 형태로 변형된 데이터가 필수적이고, 그러한 과정이 이해, 지식, 통찰력의 획득으로 나아가게 해주는 주된 경로이다.\n\n-   데이터 [**시각화**]{style=\"color:coral\"}의 두 가지 목적은 [**탐색**]{style=\"color:coral\"}과 [**커뮤니케이션**]{style=\"color:coral\"}이다. 우리가 데이터 시각화를 하는 첫번째 목적은 데이터에 대한 질문에 답을 찾기 위해서이다. 우리가 데이터를 시각화하는 두 번째 목적은 우리가 발견한 것을 다른 사람들과 ‘잘’ 커뮤니케이션하기 위해서이다.\n\n## **탐색적 데이터 분석: 개념**\n\n-   의미있는 질문을 생성한다.\n\n-   질문에 답할 수 있는 그래픽(플롯, 지도 등)을 구상한다.\n\n-   구상한 그래픽에 부합하도록 데이터를 변형한다.\n\n-   변형한 데이터를 구상한 그래픽으로 시각화한다.\n\n-   그래픽으로부터 질문의 답을 구하고, 더 나아가 지식, 이해, 통찰을 이끌어 낸다.\n\n# [세 가지 예제]{style=\"color:coral\"}\n\n## 예제 데이터: `gapminder`\n\n-   Gapminder 재단\n\n-   R의 [**gapminder**](https://jennybc.github.io/gapminder/) 패키지\n\n-   기간: 1952-2007년 5년 단위(12개 시점)\n\n-   국가 수: 142개국\n\n-   관측치 수: 1,704개 (142 x 12)\n\n-   변수: country(국가명), continent(대륙), year(연도), lifeExp(기대수명), pop(인구 수), gdpPercap(1인당 GDP)\n\n## 예제 데이터: `gapminder`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gapminder)\ngapminder\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n\n\n## 질문 1\n\n> 아시아의 1957년과 2007년의 1인당 GDP는 얼마이며 순위는 어떠한가? 1인당 GDP의 순위가 상승하였는가?\n\n## 질문 1\n\n::: panel-tabset\n## 데이터\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n\n\n## 결과\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n# Groups:   year [2]\n    year continent    sum_pop sum_gdp gdp_percap_cont\n   <int> <fct>          <dbl>   <dbl>           <dbl>\n 1  1957 Oceania     11941976 1.34e11          11192.\n 2  1957 Americas   386953916 3.52e12           9098.\n 3  1957 Europe     437890351 3.30e12           7535.\n 4  1957 Africa     264837738 3.83e11           1445.\n 5  1957 Asia      1562780599 1.56e12            998.\n 6  2007 Oceania     24549947 8.07e11          32885.\n 7  2007 Europe     586098529 1.48e13          25244.\n 8  2007 Americas   898871184 1.94e13          21603.\n 9  2007 Asia      3811953827 2.07e13           5432.\n10  2007 Africa     929539692 2.38e12           2561.\n```\n\n\n:::\n:::\n\n\n## 코드\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  group_by(year, continent) |> \n  summarize(\n    sum_pop = sum(pop),\n    sum_gdp = sum(pop * gdpPercap),\n    gdp_percap_cont = sum_gdp / sum_pop\n  ) |> \n  filter(year %in% c(1957, 2007)) |> \n  arrange(year, desc(gdp_percap_cont))\n```\n:::\n\n:::\n\n## 질문 2\n\n> 대륙별 최대국(인구가 가장 많은 나라)이 소속 대륙 전체에서 차지하는 비중이 어느 정도이고 대륙별로 어느 정도의 차이가 있는지, 그리고 대륙별 최대국의 비중이 시간이 지남에 따라 어떠한 변화 양상을 보여주고 있고, 그러한 양상에 대륙별 차이가 있는지의 여부\n\n## 질문 2\n\n::: panel-tabset\n## 데이터\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n\n\n## 그래프 1\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](R_lec_07_2025_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## 코드 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  group_by(year, continent) |> \n  mutate(\n    sum_cont = sum(pop),\n    country_prop = pop * 100 / sum_cont\n  ) |> \n  slice_max(country_prop) |> \n  ggplot() +\n  geom_line(aes(x = year, y = country_prop, color = continent))\n```\n:::\n\n\n## 코드 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  group_by(year, continent) |> \n  mutate(\n    sum_cont = sum(pop),\n    country_prop = pop * 100 / sum_cont\n  ) |> \n  slice_max(country_prop) |> \n  ggplot() +\n  geom_line(aes(x = year, y = country_prop, color = continent), linewidth = 1) +\n  scale_x_continuous(breaks = seq(1952, 2007, 5)) +\n  labs(x = \"Year\", y = \"% of Population\", color = \"Continents\")\n```\n:::\n\n\n## 그래프 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](R_lec_07_2025_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n:::\n\n## 질문 3\n\n> 1952\\~2007년간의 연평균 인구성장률의 대륙간 차이와 대륙 내 국가간 편차를 동시에 탐색\n\n-   연평균 인구성장률(%)은 다음의 공식에 의거해 산출\n\n$$\nr=\\frac{1}{n}\\times\\ln(\\frac{P_n}{P_0})\\times100\n$$\n\n## 질문 3\n\n::: panel-tabset\n## 데이터\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,704 × 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# ℹ 1,694 more rows\n```\n\n\n:::\n:::\n\n\n## 그래프 1\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](R_lec_07_2025_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## 코드 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  pivot_wider(\n    id_cols = c(country, continent),\n    names_from = year,\n    values_from = pop\n  ) |> \n  mutate(\n    pgr = (1/(2007-1952))*log(`2007`/`1952`) * 100\n  ) |> \n  ggplot(aes(x = continent, y = pgr)) +\n  geom_boxplot(aes(color = continent))\n```\n:::\n\n\n## 코드 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder |> \n  pivot_wider(\n    id_cols = c(country, continent),\n    names_from = year,\n    values_from = pop\n  ) |> \n  mutate(\n    pgr = (1/(2007-1952))*log(`2007`/`1952`) * 100\n  ) |> \n  ggplot(aes(x = fct_reorder(continent, pgr, median), y = pgr)) +\n  geom_boxplot(aes(fill = continent)) +\n  labs(x = \"Continents\", y = \"PGR(%), 1952-2007\", fill = \"Continents\")\n```\n:::\n\n\n## 그래프 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](R_lec_07_2025_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n:::\n",
    "supporting": [
      "R_lec_07_2025_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}