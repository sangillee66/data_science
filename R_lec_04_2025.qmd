---
title: |
  | [R Lecture 4]{style="color:coral;font-size:0.6em"}   
  | [데이터 불러오기와 정돈하기]{style="font-size:1em"} 
author: <br> 이상일(서울대학교 지리교육과 교수)
date: 2025-9-30
format: 
  revealjs:
    logo: snu_edu_1.png
    footer: https://sangillee.snu.ac.kr/
    transition: fade
    transition-speed: fast
    margin: 0.05
    center: false
    # smaller: false
    # scrollable: false
    code-link: true
    code-line-numbers: false
    code-copy: true
    code-overflow: scroll
    slide-number: true
    width: 960 * 1.5
    height: 700 * 1.5
    lightbox: false
    # min-scale: 1
    # max-scale: 1
    pointer:
      pointerSize: 20
      color: red
    menu: true
    embed-resources: false
    theme: [default, custom_hq_pretendard_step.scss] # 슬라이드 본문 폰트 크기 조정
    revealjs-plugins:
      - pointer
    css: styles.css
execute: 
  warning: false
  error: false
  freeze: auto  
dpi: 600
editor: visual
webr: 
  show-startup-message: false     
  packages: []
filters:
  - webr
# suppress-bibliography: true
editor_options: 
  chunk_output_type: console
---

## 데이터사이언스 프로세스

![[https://r4ds.hadley.nz/import.html](https://r4ds.hadley.nz/import.html){style="font-size:1.25rem"}](images/data_science_process_import-02.png)

-   티블(tibble): 타이디버스의 데이터 프레임 형식

-   데이터 불러오기(importing): 데이터를 '가져와' R 객체로 만들기

-   데이터 정돈하기(tidying): 불러온 데이터를 '정돈된(tidy)' 데이터로 만들기

## 데이터사이언스 프로세스: 타이디버스

![[https://r4ds.hadley.nz/intro.html](https://r4ds.hadley.nz/intro.html){style="font-size:1.25rem"}](images/data_science_process_packages-03.png)

# [티블 Tibble]{style="color:coral"}

## **tibble** 패키지

![[https://tibble.tidyverse.org/](https://tibble.tidyverse.org/){style="font-size:1.25rem"}](images/clipboard-3459494907.png){fig-align="center"}

## tibble vs. data.frame

::: panel-tabset
## 데이터 프레임

```{r}
#| echo: true
library(tidyverse)
a <- c(TRUE, FALSE, TRUE, FALSE)
b <- c(58L, 26L, 28L, 22L)
c <- c(3.19, 2.09, 2.11, 2.03)
d <- c("이상일", "김우형", "이하은", "박서우")
e <- c("남자", "남자", "여자", "여자")
df_1 <- data.frame(a, b, c, d, e)
df_2 <- tibble(a, b, c, d, e)
```

## data.frame

```{r}
#| echo: true
df_1
```

## tibble 1

```{r}
#| echo: true
df_2
```

## tibble 2

```{r}
#| echo: true
df_2 |> mutate(
  e = fct(e, levels = c("남자", "여자"))
)
```
:::

## 데이터 뷰어 Data viewer

-   데이터 프레임(티블) 객체를 엑셀과 유사한 형태로 디스플레이

-   작동 방법

    -   `View(티블명)` 함수

    -   환경창의 아이콘 클릭

-   기능

    -   소팅(sorting): 분류하기

    -   스크롤링(scrolling): 상하이동

    -   필터링(filtering): 골라내기

    -   서칭(searching): 검색하기

## 데이터 뷰어 Data viewer

![](images/clipboard-3652581161.png)

## 데이터 뷰어 Data viewer

![](images/clipboard-2907343879.png)

# [데이터 불러오기]{style="color:coral"}

## **readr** 패키지

![[https://readr.tidyverse.org/](https://readr.tidyverse.org/){style="font-size:1.25rem"}](images/clipboard-1251213286.png){fig-align="center"}

## **readr** 패키지: 주요 불러오기 함수

| 함수명         | 포맷                                       |
|----------------|--------------------------------------------|
| `read_csv()`   | 콤마분리(comma-separated values, CSV) 형식 |
| `read_csv2()`  | 세미콜론분리(semicolon-separated) 형식     |
| `read_tsv()`   | 탭구분(tab-limited) 형식                   |
| `read_delim()` | 여타의 구분 형식                           |
| `read_fwf()`   | 고정폭(fixed-width) 형식                   |
| `read_table()` | 공백구분 형식                              |
| `read_log()`   | 아파치 형식(Apache-style)의 로그 파일      |

## **readr** 패키지: 주요 파싱(parsing) 함수

| 컬럼 유형    | 새로운 벡터       | 기존 벡터           |
|--------------|-------------------|---------------------|
| 논리형 `lgl` | `col_logical()`   | `parse_logical()`   |
| 정수형 `int` | `col_integer()`   | `parse_integer()`   |
| 실수형 `dbl` | `col_double()`    | `parse_double()`    |
| 문자형 `chr` | `col_character()` | `parse_character()` |
| 범주형 `fct` | `col_factor()`    | `parse_factor()`    |

## `read_csv()` 함수의 활용

::: panel-tabset
## 불러오기 1

```{r}
#| eval: false
#| echo: true
library(tidyverse)
read_csv("https://pos.it/r4ds-students-csv")
```

## 결과 1

```{r}
library(tidyverse)
read_csv("https://pos.it/r4ds-students-csv")
```

## 불러오기 2

```{r}
#| eval: false
#| echo: true
library(tidyverse)
read_csv(
  file = "https://pos.it/r4ds-students-csv", 
  skip = 1, 
  col_names = c("student_id", "full_name", "favorite_food", "meal_plan", "age"),
  col_types = cols(
    meal_plan = col_factor(),
    age = col_number()
  ),
  na = c("N/A")
  )
```

## 결과 2

```{r}
library(tidyverse)
read_csv(
  file = "https://pos.it/r4ds-students-csv", 
  skip = 1, 
  col_names = c("student_id", "full_name", "favorite_food", "meal_plan", "age"),
  col_types = cols(
    meal_plan = col_factor(),
    age = col_number()
  ),
  na = c("N/A")
  )
```
:::

## 관련 패키지

::: {layout="[30,30, 30]" layout-valign="center"}
![[https://readxl.tidyverse.org/](https://readxl.tidyverse.org/){style="font-size:1.25rem"}](images/clipboard-2419843589.png)

![[https://ycphs.github.io/openxlsx/](https://ycphs.github.io/openxlsx/){style="font-size:1.25rem"}](images/clipboard-2386206028.png)

![[https://googlesheets4.tidyverse.org/](https://googlesheets4.tidyverse.org/){style="font-size:1.25rem"}](images/clipboard-812069546.png)
:::

## **readxl** 패키지

-   `read_xls(), read_xlsx(), read_excel()`

    -   `path`: 파일 경로와 파일명

    -   `sheet`: 특정 시트의 선택

    -   `range`: 특정 범위의 셀 선택

    -   `skip`: 불러들이지 않을 최소 행 번호

    -   `col_names`: 컬럼 이름 지정

    -   `col_types`: 컬럼 데이터 유형 지정("skip", "guess", "text", "logical", "numeric", etc.)

    -   `na`: 결측치 규정

## 데이터 불러오는 다른 방법

![](images/clipboard-3854717875.png)

# [데이터 정돈하기]{style="color:coral"}

## **tidyr** 패키지

![[https://tidyr.tidyverse.org/](https://tidyr.tidyverse.org/){style="font-size:1.25rem"}](images/clipboard-1046439731.png){fig-align="center"}

## '정돈된 데이터'의 정의

![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style="font-size:1.25rem"}](images/clipboard-4067066416.png)

## '정돈된 데이터'의 정의

![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style="font-size:1.25rem"}](images/clipboard-3412852372.png)

## '정돈된 데이터'의 정의

-   개별 변수(variable)는 열(column) 하나를 차지한다. 즉, 개별 열에는 하나의 변수가 위치한다.

-   개별 관측개체(observation)는 하나의 행(row)을 차지한다. 즉, 개별 행에는 하나의 관측개체가 위치한다.

-   개별 값(value)은 하나의 셀(cell)을 차지한다. 즉, 개별 셀에는 하나의 값이 위치한다.

## '정돈된 데이터'의 예시

::: panel-tabset
## table1

```{r}
#| echo: true
library(tidyverse)
table1
```

## table4a

```{r}
#| echo: true
table4a
```

## table2

```{r}
#| echo: true
table2
```

## table3

```{r}
#| echo: true
table3
```
:::

## '정돈된 데이터'의 이점

![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style="font-size:1.25rem"}](images/clipboard-3106963859.png)

## '정돈된 데이터'의 이점

![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style="font-size:1.25rem"}](images/clipboard-3609380673.png)

## '정돈된 데이터'의 이점

![[https://allisonhorst.com/other-r-fun](https://allisonhorst.com/other-r-fun){style="font-size:1.25rem"}](images/clipboard-1736663833.png)

## 데이터 정돈하기의 핵심 기능

-   데이터 구조 변형

    -   핵심 기능으로 데이터 늘이기와 데이터 넓히기가 포함

-   컬럼의 결합 및 분할

    -   두 개 이상의 컬럼을 하나의 컬럼으로 결합하거나 한 컬럼을 두 개 이상의 컬럼으로 분할

-   결측치 처리

    -   결측치가 포함된 행을 다양한 방식으로 처리

## 데이터 구조 변형

![[https://www.r-bloggers.com/2024/09/mastering-data-transformation-in-r-with-pivot_longer-and-pivot_wider/](https://www.r-bloggers.com/2024/09/mastering-data-transformation-in-r-with-pivot_longer-and-pivot_wider/){style="font-size:1.25rem"}](images/clipboard-1179593338.png){fig-align="center"}

## 와이드 폼(wide form) vs. 롱 폼(long form)

![](images/clipboard-2491549849.png){fig-align="center"}

## 데이터 늘이기: `pivot_longer()`

::: panel-tabset
## table4a

```{r}
#| echo: true
table4a
```

## 정돈 결과

```{r}
#| echo: true
table4a |> 
  pivot_longer(
    cols = c(`1999`, `2000`),
    names_to = "year", 
    values_to = "cases"
  )
```
:::

## 데이터 늘이기: `pivot_longer()`

![](images/clipboard-2601245679.png)

## 데이터 넓히기: `pivot_wider()`

::: panel-tabset
## table2

```{r}
#| echo: true
table2
```

## 정돈 결과

```{r}
#| echo: true
table2 |> 
  pivot_wider(
    id_cols = c(country, year),
    names_from = type, 
    values_from = count
  )
```
:::

## 데이터 넓히기: `pivot_wider()`

![](images/clipboard-3400622461.png)

## 컬럼의 결합 및 분할

::: panel-tabset
## table3

```{r}
#| echo: true
table3
```

## 정돈 결과

```{r}
#| echo: true
table3 |> separate_wider_delim(
  rate, delim = "/", names = c("cases", "population") 
) 
  
```
:::
